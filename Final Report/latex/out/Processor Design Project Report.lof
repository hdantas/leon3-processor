\select@language {english}
\select@language {english}
\contentsline {figure}{\numberline {3.1}{\ignorespaces Resulting tree after executing step 1 for and 8 bit by 8 bit multiplication.\relax }}{7}{figure.caption.4}
\contentsline {figure}{\numberline {3.2}{\ignorespaces Wallace tree structure before and after the reorganization.\relax }}{8}{figure.caption.5}
\contentsline {subfigure}{\numberline {(a)}{\ignorespaces {Detail of Wallace Tree from~\cite {betterwallace}. It is clearly visible a significant percentage of unused area.}}}{8}{subfigure.2.1}
\contentsline {subfigure}{\numberline {(b)}{\ignorespaces {Modified Wallace Tree from~\cite {betterwallace}. The image reflects the better area utilization based on the algorithm present in the paper.}}}{8}{subfigure.2.2}
\contentsline {figure}{\numberline {3.3}{\ignorespaces Diagram of the \texttt {mul32} unit, including all \texttt {in} and \texttt {out} ports as well as generics.\relax }}{10}{figure.caption.6}
\contentsline {figure}{\numberline {3.4}{\ignorespaces Diagram explaining the structure of the \texttt {WallaceTree} 3D array, with each dimension explicitly shown.\relax }}{11}{figure.caption.7}
\contentsline {figure}{\numberline {3.5}{\ignorespaces Reorganization of the Wallace tree for easier manipulation in further steps.\relax }}{11}{figure.caption.8}
\contentsline {subfigure}{\numberline {(a)}{\ignorespaces {Original}}}{11}{subfigure.5.1}
\contentsline {subfigure}{\numberline {(b)}{\ignorespaces {Modified}}}{11}{subfigure.5.2}
\contentsline {figure}{\numberline {3.6}{\ignorespaces Black box diagrams describing the interface ports of the Adders used.\relax }}{12}{figure.caption.9}
\contentsline {subfigure}{\numberline {(a)}{\ignorespaces {Full Adder}}}{12}{subfigure.6.1}
\contentsline {subfigure}{\numberline {(b)}{\ignorespaces {Half Adder}}}{12}{subfigure.6.2}
\contentsline {figure}{\numberline {3.7}{\ignorespaces Compressing columns in the WallaceTree with Full Adders and Half Adders. Each example features on column of the tree in level $k$ (before compression) and $k+1$ (after compression).\relax }}{12}{figure.caption.10}
\contentsline {subfigure}{\numberline {(a)}{\ignorespaces {Column with 3 bits.}}}{12}{subfigure.7.1}
\contentsline {subfigure}{\numberline {(b)}{\ignorespaces {Column with 4 bits.}}}{12}{subfigure.7.2}
\contentsline {subfigure}{\numberline {(c)}{\ignorespaces {Column with 5 bits.}}}{12}{subfigure.7.3}
\contentsline {figure}{\numberline {3.8}{\ignorespaces Screenshot of the Modelsim's Wave for the multiplier. For this particular simulation a 16x16 operation is shown, along with all the appropriate signals.\relax }}{14}{figure.caption.11}
\contentsline {figure}{\numberline {3.9}{\ignorespaces Detail of the handshaking signals in the original multiplier for the Dhrystone benchmark.\relax }}{15}{figure.caption.12}
\contentsline {subfigure}{\numberline {(a)}{\ignorespaces {With constant \texttt {holdn}\xspace }}}{15}{subfigure.9.1}
\contentsline {subfigure}{\numberline {(b)}{\ignorespaces {With varying \texttt {holdn}\xspace }}}{15}{subfigure.9.2}
\contentsline {figure}{\numberline {3.10}{\ignorespaces Diagram explaining how the various handshaking signals behave.\relax }}{16}{figure.caption.13}
\contentsline {figure}{\numberline {3.11}{\ignorespaces Divider State Diagram.\relax }}{18}{figure.caption.14}
\contentsline {figure}{\numberline {3.12}{\ignorespaces Divider Block Diagram (during Core Computation, State = 1).\relax }}{19}{figure.caption.15}
\contentsline {figure}{\numberline {3.13}{\ignorespaces Radix-4 P-D Plot (Red Dots are Exceptions).\relax }}{20}{figure.caption.16}
\contentsline {figure}{\numberline {3.14}{\ignorespaces Detail of SubGen (d multiples generator based of the qDigit).\relax }}{21}{figure.caption.17}
\contentsline {figure}{\numberline {3.15}{\ignorespaces Signal Dump Of Radix-4 Divider Vs. Original Divider.\relax }}{23}{figure.caption.18}
